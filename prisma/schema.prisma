// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  //engineType = "binary" // if you using replit than use this to fix error
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Guild {
  id         Int      @id @default(autoincrement())
  guildId    String      @unique
  prefix     String?     @default("!")
  setup      Setup?
  stay       stay?
  dj         Dj?
  botchannel Botchannel?
  premium    Premium?
  tracks     Tracks[]
}

model Setup {
  id        Int  @id @default(autoincrement())
  guildId   String
  guild     Guild?  @relation(fields: [guildId], references: [guildId])
  textId    String?
  messageId String?

  @@unique([guildId])
}

model stay {
  id      Int  @id @default(autoincrement())
  guildId String
  guild   Guild   @relation(fields: [guildId], references: [guildId])
  textId  String?
  voiceId String?

  @@unique([guildId])
}

model Botchannel {
  id      Int  @id @default(autoincrement())
  guildId String
  guild   Guild   @relation(fields: [guildId], references: [guildId])
  textId  String?

  @@unique([guildId])
}

model Dj {
  id      Int  @id @default(autoincrement())
  guildId String?
  guild   Guild?  @relation(fields: [guildId], references: [guildId])
  roles   Roles[]
  mode    Boolean @default(false)

  @@unique([guildId])
}

model Roles {
  id      Int @id @default(autoincrement())
  guildId String
  Dj      Dj?    @relation(fields: [guildId], references: [guildId])
  roleId  String @unique

  @@unique([guildId])
}

model User {
  id        Int     @id @default(autoincrement())
  userId    String     @unique
  playlists Playlist[]
  premium   Premium?
}

model Playlist {
  id     Int   @id @default(autoincrement())
  userId String  
  user   User?    @relation(fields: [userId], references: [userId])
  name   String
  songs  String?

  @@unique([userId, name])
}

model Premium {
  isPremium Boolean @default(false)
  id        Int  @id @default(autoincrement())
  userId    String  @unique
  guildId   String  @unique
  user      User?   @relation(fields: [userId], references: [userId])
  guild     Guild?  @relation(fields: [guildId], references: [guildId])
}

model Tracks {
  id         Int  @id @default(autoincrement())
  trackId    String  @unique
  title      String
  url        String
  duration   String
  thumbnail  String
  played     Int     @default(0)
  guildId    String
  guild      Guild?  @relation(fields: [guildId], references: [guildId])
}